Пит,

В папке release - скомпилированный run. Там же dll. Узнать, что
экспортирует эта dll можно посмотрев run_dll\run_dll.h. 
Будешь писать под дельфи - позаботься о правильном выравнивании структур,
а то RunOptions.size не совпадет и будет тебе Error - Invalid parameter.
И постарайся корректно выгружать dll при закрытии IJE, а то...

Важно:   та строчка, которую я возвращаю в RunResult дйствительна 
         до следующего вызова runApplication
Важно 2: передавай в cmdline имя exe-шника в кавычках 
         (почему - см. MSDN, CreateProcess). 
         Да, кстати, надо это в run.exe исправить :)
Выжно 3: обрати внимание - у меня строчки юникодные!!!
		 MultiByteCharToWideChar или что-то в этом роде тебе поможет

Тут же лежат исходники run. 

 * launcher_lib - общая библиотека, здесь основная функциональность
 * run - ну понятное дело run.exe
 * run_dll - dll, которую ты должен юзать
 * run_dll_test - тестовый проект использующий run_dll. Творит безобразия :)

Что бы скомпилировать надо проделать несколько шагов:

0) Оно тебе точно надо, его компилировать?

1) Скомпилировать boost, можно не весь а только program_options. 
   Смотри доку, она внутри архива boost`a.
   Я делал что-то вроде 
      bjam --prefix=D:\Boost --include=program_options install
   но может и не так, лучше посмотри доку.

2) Добавить boost\include\boost_1_33_1 в настройки проекта (для проекта run)
   или в настройки VS

3) Аналогично boost\lib
   Явным образом никакие библиотеки подключать не надо, boost сам
   знает, что надо подключить и управляетэтим через #pragma

5) Компилируешь и наслаждаешься...

P.S. Я компилировал VS8 (.NET 2005), но думаю, что предыдущие версии 
тоже справятся (крома VS6, но она уже совсем устарела).
